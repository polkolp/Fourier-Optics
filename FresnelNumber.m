% Fresnel Transform of a square aperture with different Fresnel numbers% J.R. Fienup, October 2004% figure(3);clf;n=200; ndc=fix(n/2)+1;u=zeros(n,n); % size of arraynap=fix(n/4); % size of aperture within the arrayu(1:nap,1:nap)=ones(nap,nap);u=shiftwrap(u,fix(n/2)-fix(nap/2),fix(n/2)-fix(nap/2)); % centering the aperturex=[1:n]-ndc;[fy,fx]=meshgrid(x,x);fxr2=fx.^2 + fy.^2; % these are the p's and q's squared% Fresnel numbers. Smaller is better for single-DFT Fresnelfor nf=([0 .01 .02 .05 .1 .2 .5 1 2 5]),	radcoeff=pi*nf/(nap/2)^2;	expqph=exp(i*radcoeff*fxr2);	uout=fftshift(fftn(fftshift(u.*expqph))); % propagated field	% skip constant and phase terms out front -- just looking at magnitudes	if nf==0, u0=abs(uout(ndc,:)); end; % save the case of the Fourier transform (nf=0)	figure(1);	showp(sqrt(uout),1,2)	figure(2);	plot(u0,'b--'); % plot nf = 0 case for comparison	hold on; plot(abs(uout(ndc,:)),'r','LineWidth',2); hold off	title(['Fresnel diffraction, NF = ',num2str(nf)],'FontSize',16)	v=axis;v(2)=n;axis(v)	pause;endfigure(3);plot(abs(uout(ndc,:)),'r')title(['Fresnel diffraction, NF = ',num2str(nf)],'FontSize',16)v=axis;v(2)=n;axis(v)return% not shown in class (this takes much more computing):% redoing it with a larger array size, to avoid aliasing for larger Fresnel numbersn=1000; ndc=fix(n/2)+1;u=zeros(n,n);nap=fix(n/4);u(1:nap,1:nap)=ones(nap,nap);u=shiftwrap(u,fix(n/2)-fix(nap/2),fix(n/2)-fix(nap/2));x=[1:n]-ndc;[fy,fx]=meshgrid(x,x);fxr2=fx.^2 + fy.^2; % these are the p's and q's squaredfor nf=([ 5 10 20]),radcoeff=pi*nf/(nap/2)^2;expqph=exp(i*radcoeff*fxr2);uout=fftshift(fftn(fftshift(u.*expqph)));% no phase terms out front -- just looking at magnitudesfigure(1);plot(abs(uout(ndc,:)));title(['Fresnel diffraction, NF = ',num2str(nf)],'FontSize',16)v=axis;v(2)=n;axis(v)figure(2);show(uout,1,1)pause;end